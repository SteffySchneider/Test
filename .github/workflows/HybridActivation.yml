name: ShellCheck

on:
  pull_request:
    branches:
      - 'main'
      - 'master'
    types: [ opened, synchronize ]

jobs:
  shellcheck:
    name: Run ShellCheck
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history so all scripts are available

    - name: Find all shell scripts
      id: find_scripts
      run: |
        # List all .sh files in the repository
        git ls-files | grep '\.sh$' > scripts-to-check.txt

        # Check if any scripts were found
        if [ ! -s scripts-to-check.txt ]; then
          echo "No shell scripts to check."
          exit 0
        fi

#====================================================================================================#
#                                           shellcheck                                               #  
#====================================================================================================#

    - name: Run ShellCheck
      run: |
        while IFS= read -r script; do
          echo "Checking $script"
          shellcheck "$script" || exit 1
        done < scripts-to-check.txt

    - name: Annotate ShellCheck results
      id: shellcheck_test
      if: success() || failure()
      run: |
        output_file="${{ github.workspace }}/shellcheck_results.md"
        : > $output_file  # Create the file or clear it if it already exists
        while IFS= read -r script; do
          echo "Checking $script" >> $output_file
          shellcheck "$script" >> $output_file || true
        done < scripts-to-check.txt

    - name: Create ShellCheck report
      if: failure()
      run: |
        output_file="${{ github.workspace }}/shellcheck_report.md"
        {
          echo '<details><summary>❌ ShellCheck failed checks report</summary>'
          echo ''
          echo '```'
          cat "${{ github.workspace }}/shellcheck_results.md"
          echo '```'
          echo ''
          echo '</details>'
        } > $output_file
        cat $output_file

#====================================================================================================#
#                                  PR Report Comment                                                 #  
#====================================================================================================#   
    - name: Comment PR actions message
      uses: mshick/add-pr-comment@v2
      if: failure()
      with:
        message-path: |
          ${{ github.workspace }}/shellcheck_report.md
        issue: ${{ github.event.pull_request.number }}
        refresh-message-position: true
        allow-repeats: false
        message-success: ✅ Linted files successfully
